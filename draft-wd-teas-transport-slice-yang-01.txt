



Network Working Group                                              B. Wu
Internet-Draft                                                  D. Dhody
Intended status: Standards Track                     Huawei Technologies
Expires: October 19, 2020                                         L. Han
                                                            China Mobile
                                                                R. Rokui
                                                            Nokia Canada
                                                          April 17, 2020


                 A Yang Data Model for Transport Slice
                 draft-wd-teas-transport-slice-yang-01

Abstract

   This document provides a YANG data model for the transport slice
   service.  The model can be used by a client management system of the
   transport slice controller to request, configure, and manage the
   components of an transport slice service.

   The YANG modules in this document conforms to the Network Management
   Datastore Architecture (NMDA) defined in RFC 8342.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 19, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of



Wu, et al.              Expires October 19, 2020                [Page 1]

Internet-Draft         Transport Slice YANG model             April 2020


   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions used in this document . . . . . . . . . . . . . .   3
     2.1.  Tree Diagrams . . . . . . . . . . . . . . . . . . . . . .   4
   3.  Transport Slice Model Usage . . . . . . . . . . . . . . . . .   4
   4.  Transport Slice Model Overview  . . . . . . . . . . . . . . .   4
   5.  Transport Slice Topology  . . . . . . . . . . . . . . . . . .   8
     5.1.  Transport Slice End Point . . . . . . . . . . . . . . . .   8
     5.2.  Transport Slice Connection Pattern  . . . . . . . . . . .   9
     5.3.  Transport Slice SLO . . . . . . . . . . . . . . . . . . .   9
   6.  Transport Slice Monitoring  . . . . . . . . . . . . . . . . .  11
   7.  Transport Slice Module  . . . . . . . . . . . . . . . . . . .  11
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  28
   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  29
   10. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  29
   11. References  . . . . . . . . . . . . . . . . . . . . . . . . .  29
     11.1.  Normative References . . . . . . . . . . . . . . . . . .  29
     11.2.  Informative References . . . . . . . . . . . . . . . . .  31
   Appendix A.  Appendix A Comparison with Other Possible Transport
                Slice Models . . . . . . . . . . . . . . . . . . . .  32
   Appendix B.  Appendix B Transporst Slice Traffic Criteria . . . .  33
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  34

1.  Introduction

   This document provides a YANG[RFC7950] data model for transport Slice
   Service.

   The YANG model discussed in this document is defined based on the
   description of the transport slice in
   [I-D.nsdt-teas-transport-slice-definition] and
   [I-D.nsdt-teas-ns-framework], which is used to operate customer-
   driven transport Slice during the transport Slice Network
   instantiation, and the operations includes service creation,
   modification, deletion, and monitoring.

   The YANG model discussed in this document suggests an abstract,
   technology independent model, which includes four major constructs:





Wu, et al.              Expires October 19, 2020                [Page 2]

Internet-Draft         Transport Slice YANG model             April 2020


   o  Transport Slice (TS): A TS is a logical network that interconnects
      Transport Slice End Points and the connection between EPs has
      specified service level objectives (SLOs), which are represented
      by TS-SLO-Group.

   o  Ts-Endpoint (TS-EP): TS-EP is a logical identifier to identify the
      logical access point of a Transport Slice.

   o  TS-Member: that describes how each link association between any
      slice endpoint, and per connection SLO requirement could be
      applied.

   o  TS-SLO-Group: Indicates a group of TS-members with same SLOs in
      one TS.

   It will be up to the management system or TSC(Transport Slice
   controller) to take this model as input and use other management
   system or specific configuration models to configure the different
   network elements to deliver the transport slice service.  The YANG
   models can be used with network management protocols such as
   NETCONF[RFC6241] or RESTCONF[RFC8040].  How the configuration of
   network elements is done is out of scope for this document.

   The transport Slice Network operational state is included in the same
   tree as the configuration consistent with Network Management
   Datastore Architecture[RFC8342].

2.  Conventions used in this document

   The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP14, [RFC2119], [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The following terms are defined in [RFC6241] and are used in this
   specification:

   o  client

   o  configuration data

   o  server

   o  state data

   The following terms are defined in [RFC7950] and are used in this
   specification:



Wu, et al.              Expires October 19, 2020                [Page 3]

Internet-Draft         Transport Slice YANG model             April 2020


   o  augment

   o  data model

   o  data node

   The terminology for describing YANG data models is found in
   [RFC7950].

2.1.  Tree Diagrams

   Tree diagrams used in this document follow the notation defined in
   [RFC8340].

3.  Transport Slice Model Usage

   The intention of the transport slice model is to allow the consumers,
   e.g.  A higher level management system, to request and monitor
   transport slices.  In particular, the model allows consumers to
   operate in an abstract, technology-agnostic manner, with
   implementation details hidden.

   In the use case of 5G transport application, E2E network slice
   orchestrator acts as the higher layer system to request the transport
   slices.  The interface is used to support dynamic transport slice
   creation and its lifecycle management to facilitate end-to-end
   network slice services.

             +----------------------------------------+
             |     A higher level system              |
             |                                        |
             +----------------+-----------------------+
                              |
                              | transport slice YANG
                              |
                              |
        +---------------------+--------------------------+
        |        Transport Slice Controller              |
        +------------------------------------------------+

                  Figure 1 Transport Slice Model Context

4.  Transport Slice Model Overview

   From a consumer perspective, an example of transport slice service
   network is shown in figure 2.





Wu, et al.              Expires October 19, 2020                [Page 4]

Internet-Draft         Transport Slice YANG model             April 2020


                  +--------------------------+
+--------+        |                          |
|Customer|  /--\  |                          |  /--\   +-------+
| Site1  |-+ EP1--+                          +-+ EP3+--+       |
+--------+  \--/  |                          |  \--/   |Customer
                  |                          |         | Site3 |
+--------+  /--\  |                          |  /--\   |       |
|Customer|-+ EP2--+                          +-+ EP4+--+       |
| Site2  |  \--/  |   Transport Network      |  \--/   +-------+
+--------+        |                          |
                  |                          |
                  +--------------------------+

             |                                    |
             |<-------------Transport------------>|
             |              Slice 1               |


        TS-SLO-Group Red                  TS-SLO-Group Blue
      TS-Member 2      EP1-EP3          TS-Member 1      EP1-EP2
      TS-Member 3      EP1-EP4
      TS-Member 4      EP2-EP3
      TS-Member 5      EP2-EP4

 Figure 2: An example of TS-Endpoints and TS-Members of a transport slice

   As shown in Figure 2, a Transport Slice(TS) links together End Points
   at external Interfaces to the sites, which are customer endpoints
   that request a transport slicing service.

   At each external site, one or multiple TS End Points could be
   connected to the Transport Slice.  In the example above, when a site
   is connected to the transport network via two interfaces in one
   Transport Slice, two End Points are created.

   TS is a connectivity service with specific SLO characteristics,
   including bandwidth, QoS metric, etc.  The connectivity service is a
   combination of logical connections, represented by TS-member.  When
   some parts of a slice have different SLO requirements, a group of TS-
   Members with the same SLO is described by TS-SLO-Group.

   The modeling of this model assumes that the higher level system has a
   consistent topology, including at least the topology of the
   interconnection between the transport network external interfaces and
   the customer network.  The upper-layer system needs to communicate
   the endpoint information related to the topology of the transport
   slice based on the topology of the customer network connected to the
   transport slice nework.



Wu, et al.              Expires October 19, 2020                [Page 5]

Internet-Draft         Transport Slice YANG model             April 2020


   Based on this design, the Transport Slice YANG module consists of the
   main containers: "transport-slice", "ts-endpoint", "ts-member",and
   "ts-slo-group".

   The figure below describes the overall structure of the YANG module:

module: ietf-transport-slice
  +--rw transport-slices
     +--rw slice-templates
     |  +--rw slice-template* [id]
     |     +--rw id                      string
     |     +--rw template-description?   string
     +--rw transport-slice* [ts-id]
        +--rw ts-id           uint32
        +--rw ts-name?        string
        +--rw ts-topology*    identityref
        +--rw ts-slo-group* [slo-group-name]
        |  +--rw slo-group-name          string
        |  +--rw default-slo-group?      boolean
        |  +--rw slo-tag?                string
        |  +--rw (slo-template)?
        |  |  +--:(standard)
        |  |  |  +--rw template?         -> /transport-slices/slice-templates/slice-template/id
        |  |  +--:(custom)
        |  |     +--rw ts-slo-policy
        |  |        +--rw isolation-type?      identityref
        |  |        +--rw bandwidth?           te-types:te-bandwidth
        |  |        +--rw latency
        |  |        |  +--rw one-way-latency?   uint32
        |  |        |  +--rw two-way-latency?   uint32
        |  |        +--rw jitter
        |  |        |  +--rw one-way-jitter?   uint32
        |  |        |  +--rw two-way-jitter?   uint32
        |  |        +--rw loss
        |  |        |  +--rw one-way-loss?   decimal64
        |  |        |  +--rw two-way-loss?   decimal64
        |  |        +--rw ts-metric-bounds
        |  |        |  +--rw ts-metric-bound* [metric-type]
        |  |        |     +--rw metric-type    identityref
        |  |        |     +--rw upper-bound?   uint64
        |  |        +--rw availability-type?   identityref
        |  +--rw ts-member-group* [ts-member-id]
        |  |  +--rw ts-member-id    -> /transport-slices/transport-slice/ts-member/ts-member-id
        |  +--ro slo-group-monitoring
        |     +--ro latency?   uint32
        |     +--ro jitter?    uint32
        |     +--ro loss?      decimal64
        +--rw status



Wu, et al.              Expires October 19, 2020                [Page 6]

Internet-Draft         Transport Slice YANG model             April 2020


        |  +--rw admin-enabled?   boolean
        |  +--ro oper-status?     operational-type
        +--rw ts-endpoint* [ep-id]
        |  +--rw ep-id                     uint32
        |  +--rw ep-name?                  string
        |  +--rw ep-role*                  identityref
        |  +--rw geolocation
        |  |  +--rw altitude?    int64
        |  |  +--rw latitude?    geographic-coordinate-degree
        |  |  +--rw longitude?   geographic-coordinate-degree
        |  +--rw node-id?                  string
        |  +--rw tp-id?                    string
        |  +--rw ts-traffic-criteria
        |  |  +--rw ts-traffic-criteria* [match-type]
        |  |     +--rw match-type    identityref
        |  |     +--rw value?        string
        |  +--rw site-access-parameters
        |  |  +--rw site-name?               string
        |  |  +--rw availability-priority?   uint32
        |  +--rw bandwidth-slo
        |  |  +--rw incoming-bandwidth
        |  |  |  +--rw guaranteed-bandwidth?   te-types:te-bandwidth
        |  |  |  +--rw max-bandwidth?          te-types:te-bandwidth
        |  |  +--rw outgoing-bandwidth
        |  |     +--rw guaranteed-bandwidth?   te-types:te-bandwidth
        |  |     +--rw max-bandwidth?          te-types:te-bandwidth
        |  +--rw mtu                       uint16
        |  +--rw protocol
        |  |  +--rw vrrp
        |  |  |  +--rw float-ipv4?   inet:ipv4-prefix
        |  |  |  +--rw float-ipv6?   inet:ipv6-prefix
        |  |  +--rw bgp
        |  |  |  +--rw bgp-peer-ipv4*   inet:ipv4-prefix
        |  |  |  +--rw bgp-peer-ipv6*   inet:ipv6-prefix
        |  |  +--rw static
        |  |     +--rw static-route-ipv4*   inet:ipv4-prefix
        |  |     +--rw static-route-ipv6*   inet:ipv6-prefix
        |  +--rw status
        |  |  +--rw admin-enabled?   boolean
        |  |  +--ro oper-status?     operational-type
        |  +--ro ep-monitoring
        |     +--ro incoming-utilized-bandwidth?   te-types:te-bandwidth
        |     +--ro incoming-bw-utilization        decimal64
        |     +--ro outgoing-utilized-bandwidth?   te-types:te-bandwidth
        |     +--ro outgoing-bw-utilization        decimal64
        +--rw ts-member* [ts-member-id]
           +--rw ts-member-id            uint32
           +--rw src



Wu, et al.              Expires October 19, 2020                [Page 7]

Internet-Draft         Transport Slice YANG model             April 2020


           |  +--rw src-ts-ep-id?   -> /transport-slices/transport-slice/ts-endpoint/ep-id
           +--rw dest
           |  +--rw dest-ts-ep-id?   -> /transport-slices/transport-slice/ts-endpoint/ep-id
           +--rw monitoring-type?        ts-monitoring-type
           +--ro ts-member-monitoring
              +--ro latency?   uint32
              +--ro jitter?    uint32
              +--ro loss?      decimal64

5.  Transport Slice Topology

   A transport slice topology consists of a group of interconnected
   transport slice End Points, and the connections between EPs may have
   different SLO requirements, including symmetrical or asymmetrical
   traffic throughput, different traffic delay, etc.

5.1.  Transport Slice End Point

   A TS End Point is a logical entity at an external Interface of the
   transport network to a customer site.  And there are multiple
   connection methods as follows:

   o  a distinct physical connection

   o  a logical Layer 2 connection

   o  An IP(e.g. using GRE Tunnel) or Ethernet tunnel

   Based on this, the end point in this model could represents the
   following options:

   o  A slice interface of a customer site: the "node-id" and "tp-id"
      under the "ts-endpoint" can be specified

   o  A slice interface of the transport network: the "node-id" and "tp-
      id" under the "ts-endpoint" can be specified, and "site-access-
      parameters" can be used to specify the attached customer site.

   o  The subset of traffic through the particular inteface connected to
      the transport network, either at the customer site or the
      transport network: besides the the "node-id" and "tp-id", the "ts-
      traffic-criteria" is needed

   A number of slice interconnection parameters must be agreed with a
   customer site and the transport slice, and one TS End Point's
   attributes may not be same with another TS End Point's.  The
   attributes may include some technology specific parameters, such as




Wu, et al.              Expires October 19, 2020                [Page 8]

Internet-Draft         Transport Slice YANG model             April 2020


   connections, encapsulation, and routing protocols, etc.  This model
   can be augmented based on the requirements.

   Note: The definition of the current Endpoint mainly focus on the
   common interconnection parameters, but a number of technology-
   specific parameters of slice interconnection must also be agreed with
   each customer site and the transport network.  This model needs to
   give some guidance on how to deal with them, such as
   encapsulation,routing, etc.

5.2.  Transport Slice Connection Pattern

   A TS service can be point-to-point (P2P), point-to-multipoint (P2MP),
   multipoint-to-point (MP2P), or multipoint-to-multipoint (MP2MP) based
   on the customer's service traffic pattern requirements.

   Therefore, the "ts-topology" is required for configuration.  The
   model supports any-to-any, Hub and Spoke (where Hubs can exchange
   traffic), and the different combinations, which are supported through
   the order-list of topology.  New topologies could be added via
   augmentation.  By default, the any-to-any VPN service topology is
   used.

   In addition, "ep-role" also needs to be defined, which specifies the
   role of the end point in a particular TS topology.  In the any-to-any
   VPN service topology, all end points MUST have the same role, which
   will be "any-to-any-role".  In the Hub-and-Spoke topology, end points
   MUST have a Hub role or a Spoke role.

5.3.  Transport Slice SLO

   As defined in , [I-D.nsdt-teas-transport-slice-definition]

   The common Transport Slice SLO attributes are as follows:

   o  Guaranteed bandwidth: indicates the assurance of minimum or range
      of the bandwidth requirement.  Requested unidirectionally

   o  Guaranteed latency: indicates the latency constraint of the slice

   o  Minimal permissible jitter: indicates the jitter constraint of the
      slice

   o  Packet loss rate: indicates reliability constraint, which
      specifies permissible packet loss rate between two endpoints

   o  Isolation: indicates that a transport slice can be enforced as
      physical resource isolation or logical resource allocations.  For



Wu, et al.              Expires October 19, 2020                [Page 9]

Internet-Draft         Transport Slice YANG model             April 2020


      physical resource isolation, it implies that the forwarding,
      policy and address spaces are local with in a transport slice and
      instantiation of one slice does not conflict with another slice.
      For logical isolation, only policy and address spaces are isolated
      from another slice

   o  Availability: Availability is a probabilistic measure of the
      length of time that a slice instance functions without a network
      failure.  The availability level will need to be translated into
      network specific policies such as the protection policy associated
      with the slice

   o  MTU: Specifies the maximum packet length that the slice gurantee
      to be able to carry across

   Note: About the definition of SLO parameters, the author is
   discussing to reuse the TE-Types grouping definition as much as
   possible, to avoid duplication of definitions.

   The customer's services may be quite different, e.g. some slice
   services has the same SLO requirements of connections, some slice
   services has the different SLO requirements for different parts of
   the slice.  In some slices, the bandwidth of one endpoint is
   different from that of other endpoints, for example, one is central
   endpoint, the other endpoints are access endpoints.

   The list "ts-slo-group" defines a group of different SLOs, which are
   used to describe that different parts of the slice have different
   SLOs.  The specific SLO of the slice SLO group may use a standard SLO
   template, or may use different customized parameters.  A group of
   "ts-member" is used to describe which connections of the slice use
   the SLO.

   For the simplest slice services, only one category SLO of "ts-slo-
   group" needs to be defined, also with the "ts-topology" specified.
   If the traffic bandwidth is asymmetric for some endpoints, the
   bandwidth constraint should be specified at each End Point of a
   Transport Slice.  The "bandwidth-slo" container under the "ts-
   endpoint" is used to define a guaranteed amount of bandwidth and also
   a maximum bandwidth for the transport slice.

   For the complicated slices, in addition to the configurations above,
   multiple "ts-slo-group" needs to be defined, and "ts-member-group"
   under the "ts-slo-group" or "slo-group" under the "ts-member"
   describe details of the per-connection SLO.






Wu, et al.              Expires October 19, 2020               [Page 10]

Internet-Draft         Transport Slice YANG model             April 2020


   Note: In some use cases, the number of connections represented by
   "ts-member-group" may be huge, which may lead to configuration
   issues, for example, the scalability or error-prone.

6.  Transport Slice Monitoring

   This model also describes performance status of a transport slice.
   The statistics are described in the following granularity:

   o  Per TS SLO group: specified in 'ts-member-group-monitoring' under
      the "ts-slo-groupr"

   o  Per TS connection: specified in 'ts-member-monitoring' under the
      "ts-member"

   o  Per TS Endpoint: specified in 'ep-monitoring' under the "ts-
      endpoint"

   This model does not define monitoring enabling methods.  The
   mechanism defined in [RFC8640] and [RFC8641] can be used for either
   periodic or on-demand subscription.

   By specifying subtree filters or xpath filters to 'ts-member' or
   'endpoint' ,so that only interested contents will be sent.  These
   mechanisms can be used for monitoring the transport slice performance
   status so that the client management system could initiate
   modification based on the transport slice running status.

7.  Transport Slice Module

   <CODE BEGINS> file "ietf-transport-slice@2020-04-15.yang"

module ietf-transport-slice {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-transport-slice";
  prefix ts;

  import ietf-inet-types {
    prefix inet;
  }
  import ietf-te-types {
    prefix te-types;
  }

  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact



Wu, et al.              Expires October 19, 2020               [Page 11]

Internet-Draft         Transport Slice YANG model             April 2020


    "WG Web:  <https://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>
     Editor: Bo Wu <lana.wubo@huawei.com>
           : Dhruv Dhody <dhruv.ietf@gmail.com>";
  description
    "This module contains a YANG module for the Transport Slice.

     Copyright (c) 2020 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Simplified BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";


  revision 2020-04-15 {
    description
      "initial version.";
    reference
      "RFC XXXX: A Yang Data Model for Transport Slice Operation";
  }

  /* Features */
  /* Identities */

  identity ts-topology {
    description
      "Base identity for Transport Slice topology.";
  }

  identity any-to-any {
    base ts-topology;
    description
      "Identity for any-to-any Transport Slice topology.";
  }

  identity hub-spoke {
    base ts-topology;
    description
      "Identity for Hub-and-Spoke Transport Slice topology.";
  }




Wu, et al.              Expires October 19, 2020               [Page 12]

Internet-Draft         Transport Slice YANG model             April 2020


  identity ep-role {
    description
      "Site Role in a Transport Slice topology ";
  }

  identity any-to-any-role {
    base ep-role;
    description
      "Site in an any-to-any Transport Slice.";
  }

  identity hub {
    base ep-role;
    description
      "Hub Role in a Hub-and-Spoke Transport Slice.";
  }

  identity spoke {
    base ep-role;
    description
      "Spoke Role in a Hub-and-Spoke transport slice.";
  }

  identity isolation-type {
    description
      "Base identity from which specific isolation types are derived.";
  }

  identity physical-isolation {
    base isolation-type;
    description
      "physical isolation.";
  }

  identity logical-isolation {
    base isolation-type;
    description
      "logical-isolation.";
  }

  identity ts-slo-metric-type {
    description
      "Base identity for TS SLO metric type";
  }

  identity ts-match-type {
    description
      "Base identity for TS metric type";



Wu, et al.              Expires October 19, 2020               [Page 13]

Internet-Draft         Transport Slice YANG model             April 2020


  }

  identity ts-vlan-match {
    base ts-match-type;
    description
      "logical-isolation.";
  }

  /*
   * Identity for availability-type
   */

  identity availability-type {
    description
      "Base identity from which specific map types are derived.";
  }

  identity level-1 {
    base availability-type;
    description
      "level 1: 99.9999%";
  }

  identity level-2 {
    base availability-type;
    description
      "level 2: 99.999%";
  }

  identity level-3 {
    base availability-type;
    description
      "level 3: 99.99%";
  }

  identity level-4 {
    base availability-type;
    description
      "level 4: 99.9%";
  }

  identity level-5 {
    base availability-type;
    description
      "level 5: 99%";
  }

  /* typedef */



Wu, et al.              Expires October 19, 2020               [Page 14]

Internet-Draft         Transport Slice YANG model             April 2020


  typedef operational-type {
    type enumeration {
      enum up {
        value 0;
        description
          "Operational status UP.";
      }
      enum down {
        value 1;
        description
          "Operational status DOWN";
      }
      enum unknown {
        value 2;
        description
          "Operational status UNKNOWN";
      }
    }
    description
      "This is a read-only attribute used to determine the
       status of a particular element";
  }

  typedef ts-monitoring-type {
    type enumeration {
      enum one-way {
        description
          "represents one-way monitoring type";
      }
      enum two-way {
        description
          "represents two-way monitoring type";
      }
    }
    description
      "enumerated type of monitoring on a ts-member ";
  }

  /* Groupings */

  grouping status-params {
    description
      "Grouping used to join operational and administrative status
       is re used in the Site Network Acess and in the VPN-Node";
    container status {
      description
        "Container for status of administration and operational";
      leaf admin-enabled {



Wu, et al.              Expires October 19, 2020               [Page 15]

Internet-Draft         Transport Slice YANG model             April 2020


        type boolean;
        description
          "Administrative Status UP/DOWN";
      }
      leaf oper-status {
        type operational-type;
        config false;
        description
          "Operations status";
      }
    }
  }

  grouping ts-traffic-criteria {
    description
      "Grouping for traffic definition.";
    container ts-traffic-criteria {
      description
        "Describes traffic-matching criteria.";
      list ts-traffic-criteria {
        key "match-type";
        description
          "List of TS traffic criteria";
        leaf match-type {
          type identityref {
            base ts-match-type;
          }
          description
            "Identifies an entry in the list of match-type for the TS.";
        }
        leaf value {
          type string;
          description
            "Describes traffic-matching criteria,e.g. IP adress,
             VLAN, etc.";
        }
      }
    }
  }

  grouping routing-protocols {
    description
      "Grouping for endpoint protocols definition.";
    container protocol {
      description
        "Describes protocal between access potin and site.";
      container vrrp {
        description



Wu, et al.              Expires October 19, 2020               [Page 16]

Internet-Draft         Transport Slice YANG model             April 2020


          "Configuration specific to VRRP routing.";
        leaf float-ipv4 {
          type inet:ipv4-prefix;
          description
            "vrrp ipv4 float-ip.";
        }
        leaf float-ipv6 {
          type inet:ipv6-prefix;
          description
            "vrrp ipv6 float ip.";
        }
      }
      container bgp {
        description
          "BGP-specific configuration.";
        leaf-list bgp-peer-ipv4 {
          type inet:ipv4-prefix;
          description
            "BGP peer ipv4 address.";
        }
        leaf-list bgp-peer-ipv6 {
          type inet:ipv6-prefix;
          description
            "BGP peer ipv6 address.";
        }
      }
      container static {
        description
          "Only applies when protocol is static.";
        leaf-list static-route-ipv4 {
          type inet:ipv4-prefix;
          description
            "ipv4 static route";
        }
        leaf-list static-route-ipv6 {
          type inet:ipv6-prefix;
          description
            "ipv6 static route";
        }
      }
    }
  }

  grouping ep-monitoring-parameters {
    description
      "Grouping for ep-monitoring-parameters.";
    container ep-monitoring {
      config false;



Wu, et al.              Expires October 19, 2020               [Page 17]

Internet-Draft         Transport Slice YANG model             April 2020


      description
        "Container for ep-monitoring-parameters.";
      leaf incoming-utilized-bandwidth {
        type te-types:te-bandwidth;
        description
          "Bandwidth utilization that represents the actual
           utilization of the incoming endpoint.";
      }
      leaf incoming-bw-utilization {
        type decimal64 {
          fraction-digits 5;
          range "0..100";
        }
        units "percent";
        mandatory true;
        description
          "To be used to define the bandwidth utilization
           as a percentage of the available service bandwidth.";
      }
      leaf outgoing-utilized-bandwidth {
        type te-types:te-bandwidth;
        description
          "Bandwidth utilization that represents the actual
           utilization of the incoming endpoint.";
      }
      leaf outgoing-bw-utilization {
        type decimal64 {
          fraction-digits 5;
          range "0..100";
        }
        units "percent";
        mandatory true;
        description
          "To be used to define the bandwidth utilization
           as a percentage of the available service bandwidth.";
      }
    }
  }

  grouping common-monitoring-parameters {
    description
      "Grouping for link-monitoring-parameters.";
    leaf latency {
      type uint32;
      units "usec";
      description
        "The latency statistics per TS member.";
    }



Wu, et al.              Expires October 19, 2020               [Page 18]

Internet-Draft         Transport Slice YANG model             April 2020


    leaf jitter {
      type uint32 {
        range "0..16777215";
      }
      description
        "The jitter statistics per TS member.";
    }
    leaf loss {
      type decimal64 {
        fraction-digits 6;
        range "0 .. 50.331642";
      }
      description
        "Packet loss as a percentage of the total traffic
         sent over a configurable interval. The finest precision is
         0.000003%. where the maximum 50.331642%.";
      reference
        "RFC 7810, section-4.4";
    }
  }

  grouping geolocation-container {
    description
      "A grouping containing a GPS location.";
    container geolocation {
      description
        "A container containing a GPS location.";
      leaf altitude {
        type int64;
        units "millimeter";
        description
          "Distance above the sea level.";
      }
      leaf latitude {
        type decimal64 {
          fraction-digits 8;
          range "-90..90";
        }
        description
          "Relative position north or south on the Earth's surface.";
      }
      leaf longitude {
        type decimal64 {
          fraction-digits 8;
          range "-180..180";
        }
        description
          "Angular distance east or west on the Earth's surface.";



Wu, et al.              Expires October 19, 2020               [Page 19]

Internet-Draft         Transport Slice YANG model             April 2020


      }
    }
    // gps-location
  }

  // geolocation-container

  grouping endpoint {
    description
      "Transport Slice endpoint related information";
    leaf ep-id {
      type uint32;
      description
        "unique identifier for the referred Transport Slice endpoint";
    }
    leaf ep-name {
      type string;
      description
        "ep name";
    }
    leaf-list ep-role {
      type identityref {
        base ep-role;
      }
      default "any-to-any-role";
      description
        "Role of the endpoint in the Transport Slice.";
    }
    uses geolocation-container;
    leaf node-id {
      type string;
      description
        "Uniquely identifies an edge node within the transport
         network.";
    }
    leaf tp-id {
      type string;
      description
        "Termination point identifier of an edge node.";
    }
    uses ts-traffic-criteria;
    container site-access-parameters {
      leaf site-name {
        type string;
        description
          "The Site that the endpoint is attached with";
      }
      leaf availability-priority {



Wu, et al.              Expires October 19, 2020               [Page 20]

Internet-Draft         Transport Slice YANG model             April 2020


        type uint32;
        default "100";
        description
          "In multihoming access of one site, the priority for
           this Endpoint is specified . The higher the value, the higher
           the preference of the Endpoint will be.";
      }
      description
        "Site specific parameters.";
    }
    container bandwidth-slo {
      container incoming-bandwidth {
        leaf guaranteed-bandwidth {
          type te-types:te-bandwidth;
          description
            "If guaranteed-bandwidth is 0, it means best effort, no
             minimum throughput is guaranteed.";
        }
        leaf max-bandwidth {
          type te-types:te-bandwidth;
          description
            "max bandwidth ";
        }
        description
          "Container for the incoming bandwidth policy";
      }
      container outgoing-bandwidth {
        leaf guaranteed-bandwidth {
          type te-types:te-bandwidth;
          description
            "If guaranteed-bandwidth is 0, it means best effort, no
             minimum throughput is guaranteed.";
        }
        leaf max-bandwidth {
          type te-types:te-bandwidth;
          description
            "max bandwidth ";
        }
        description
          "Container for the bandwidth policy";
      }
      description
        "Container for the bandwidth SLO policy";
    }
    leaf mtu {
      type uint16;
      units "bytes";
      mandatory true;



Wu, et al.              Expires October 19, 2020               [Page 21]

Internet-Draft         Transport Slice YANG model             April 2020


      description
        "MTU at service level. If the service is IP,
         it refers to the IP MTU. If the service is Ethertype,
         will refer to the Ethernet MTU. ";
    }
    uses routing-protocols;
    uses status-params;
    uses ep-monitoring-parameters;
  }

  //ts-ep

  grouping ts-member {
    description
      "ts-member is described by this container";
    leaf ts-member-id {
      type uint32;
      description
        "ts-member identifier";
    }
    container src {
      description
        "the source of TS link";
      leaf src-ts-ep-id {
        type leafref {
          path "/transport-slices/transport-slice/ts-endpoint/ep-id";
        }
        description
          "reference to source TS endpoint";
      }
    }
    container dest {
      description
        "the destination of TS link ";
      leaf dest-ts-ep-id {
        type leafref {
          path "/transport-slices/transport-slice/ts-endpoint/ep-id";
        }
        description
          "reference to dest TS endpoint";
      }
    }
    leaf monitoring-type {
      type ts-monitoring-type;
      description
        "One way or two way monitoring type.";
    }
    container ts-member-monitoring {



Wu, et al.              Expires October 19, 2020               [Page 22]

Internet-Draft         Transport Slice YANG model             April 2020


      config false;
      description
        "SLO status Per ts endpoint to endpoint ";
      uses common-monitoring-parameters;
    }
  }

  //ts-member

  grouping ts-metric-bounds {
    description
      "TS metric bounds grouping";
    container ts-metric-bounds {
      description
        "TS metric bounds container";
      list ts-metric-bound {
        key "metric-type";
        description
          "List of TS metric bounds";
        leaf metric-type {
          type identityref {
            base ts-slo-metric-type;
          }
          description
            "Identifies an entry in the list of metric-types
             bound for the TS.";
        }
        leaf upper-bound {
          type uint64;
          default "0";
          description
            "Upper bound on ts-member metric. A zero indicate
             an unbounded upper limit for the specific metric-type";
        }
      }
    }
  }

  grouping transport-slice-slo-group {
    description
      "Grouping for SLO definition of TS";
    list ts-slo-group {
      key "slo-group-name";
      description
        "List of TS SLO groups, the SLO group is used to
         support different SLO objectives between different ts-members
         in the same slice.";
      leaf slo-group-name {



Wu, et al.              Expires October 19, 2020               [Page 23]

Internet-Draft         Transport Slice YANG model             April 2020


        type string;
        description
          "Identifies an entry in the list of SLO group for the TS.";
      }
      leaf default-slo-group {
        type boolean;
        default "false";
        description
          "Is the SLO group is selected as the default-slo-group";
      }
      leaf slo-tag {
        type string;
        description
          "slo tag for operational management";
      }
      choice slo-template {
        description
          "Choice for SLO template.
           Can be standard template or customized template.";
        case standard {
          description
            "Standard SLO template.";
          leaf template {
            type leafref {
              path "/transport-slices/slice-templates/slice-template/id";
            }
            description
              "QoS template to be used.";
          }
        }
        case custom {
          description
            "Customized SLO template.";
          container ts-slo-policy {
            leaf isolation-type {
              type identityref {
                base isolation-type;
              }
              default "logical-isolation";
              description
                "TS service isolation-level.";
            }
            leaf bandwidth {
              type te-types:te-bandwidth;
              description
                "max bandwidth ";
            }
            container latency {



Wu, et al.              Expires October 19, 2020               [Page 24]

Internet-Draft         Transport Slice YANG model             April 2020


              leaf one-way-latency {
                type uint32 {
                  range "0..16777215";
                }
                units "usec";
                description
                  "lowest latency in micro seconds.";
              }
              leaf two-way-latency {
                type uint32 {
                  range "0..16777215";
                }
                description
                  "lowest-way delay or latency in micro seconds.";
              }
              description
                "Latency constraint on the traffic class.";
            }
            container jitter {
              leaf one-way-jitter {
                type uint32 {
                  range "0..16777215";
                }
                description
                  "lowest latency in micro seconds.";
              }
              leaf two-way-jitter {
                type uint32 {
                  range "0..16777215";
                }
                description
                  "lowest-way delay or latency in micro seconds.";
              }
              description
                "Jitter constraint on the traffic class.";
            }
            container loss {
              leaf one-way-loss {
                type decimal64 {
                  fraction-digits 6;
                  range "0 .. 50.331642";
                }
                description
                  "Packet loss as a percentage of the total traffic sent
                   over a configurable interval. The finest precision is
                   0.000003%. where the maximum 50.331642%.";
                reference
                  "RFC 7810, section-4.4";



Wu, et al.              Expires October 19, 2020               [Page 25]

Internet-Draft         Transport Slice YANG model             April 2020


              }
              leaf two-way-loss {
                type decimal64 {
                  fraction-digits 6;
                  range "0 .. 50.331642";
                }
                description
                  "Packet loss as a percentage of the total traffic sent
                   over a configurable interval. The finest precision is
                   0.000003%. where the maximum 50.331642%.";
                reference
                  "RFC 7810, section-4.4";
              }
              description
                "Loss constraint on the traffic class.";
            }
            uses ts-metric-bounds;
            leaf availability-type {
              type identityref {
                base availability-type;
              }
              description
                "Availability Requirement for the Service";
            }
            description
              "container for customized policy constraint on the slice
               traffic.";
          }
        }
      }
      list ts-member-group {
        key "ts-member-id";
        description
          "List of included TS Member groups for the SLO.";
        leaf ts-member-id {
          type leafref {
            path "/transport-slices/transport-slice/ts-member/ts-member-id";
          }
          description
            "Identifies the included list of TS member.";
        }
      }
      container slo-group-monitoring {
        config false;
        description
          "SLO status Per slo group ";
        uses common-monitoring-parameters;
      }



Wu, et al.              Expires October 19, 2020               [Page 26]

Internet-Draft         Transport Slice YANG model             April 2020


    }
  }

  grouping slice-template {
    description
      "Grouping for slice-templates.";
    container slice-templates {
      description
        "Container for slice-templates.";
      list slice-template {
        key "id";
        leaf id {
          type string;
          description
            "Identification of the SLO Template to be used.
             Local administration meaning.";
        }
        leaf template-description {
          type string;
          description
            "Description of the SLO template.";
        }
        description
          "List for SLO template identifiers.";
      }
    }
  }

  /* Configuration data nodes */

  container transport-slices {
    description
      "transport-slice configurations";
    uses slice-template;
    list transport-slice {
      key "ts-id";
      description
        "a transport-slice is identified by a ts-id";
      leaf ts-id {
        type uint32;
        description
          "a unique transport-slice identifier";
      }
      leaf ts-name {
        type string;
        description
          "ts name";
      }



Wu, et al.              Expires October 19, 2020               [Page 27]

Internet-Draft         Transport Slice YANG model             April 2020


      leaf-list ts-topology {
        type identityref {
          base ts-topology;
        }
        default "any-to-any";
        description
          "TS service topology.";
      }
      uses transport-slice-slo-group;
      uses status-params;
      list ts-endpoint {
        key "ep-id";
        uses endpoint;
        description
          "list of endpoints in this slice";
      }
      list ts-member {
        key "ts-member-id";
        description
          "List of ts-member in a slice";
        uses ts-member;
      }
    }
    //ts-list
  }
}

   <CODE ENDS>

8.  Security Considerations

   The YANG module defined in this document is designed to be accessed
   via network management protocols such as NETCONF [RFC6241] or
   RESTCONF [RFC8040].  The lowest NETCONF layer is the secure transport
   layer, and the mandatory-to-implement secure transport is Secure
   Shell (SSH) [RFC6242].  The lowest RESTCONF layer is HTTPS, and the
   mandatory-to-implement secure transport is TLS [RFC8446].

   The NETCONF access control model [RFC8341] provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.

   There are a number of data nodes defined in this YANG module that are
   writable/creatable/deletable (i.e., config true, which is the
   default).  These data nodes may be considered sensitive or vulnerable
   in some network environments.  Write operations (e.g., edit-config)




Wu, et al.              Expires October 19, 2020               [Page 28]

Internet-Draft         Transport Slice YANG model             April 2020


   to these data nodes without proper protection can have a negative
   effect on network operations.

   o /ietf-transport-slice/transport-slices/transport-slice

   The entries in the list above include the whole transport network
   configurations corresponding with the slice which the higher
   management system requests, and indirectly create or modify the PE or
   P device configurations.  Unexpected changes to these entries could
   lead to service disruption and/or network misbehavior.

9.  IANA Considerations

   This document registers a URI in the IETF XML registry [RFC3688].
   Following the format in [RFC3688], the following registration is
   requested to be made:

      URI: urn:ietf:params:xml:ns:yang:ietf-transport-slice
      Registrant Contact: The IESG.
      XML: N/A, the requested URI is an XML namespace.



   This document requests to register a YANG module in the YANG Module
   Names registry [RFC7950].

             Name: ietf-transport-slice
             Namespace: urn:ietf:params:xml:ns:yang:ietf-transport-slice
             Prefix: ts
             Reference: RFC XXXX

10.  Acknowledgments

   The authors wish to thank Qin Wu, and many others for their helpful
   comments and suggestions.

11.  References

11.1.  Normative References

   [I-D.ietf-teas-actn-vn-yang]
              Lee, Y., Dhody, D., Ceccarelli, D., Bryskin, I., and B.
              Yoon, "A Yang Data Model for VN Operation", draft-ietf-
              teas-actn-vn-yang-08 (work in progress), March 2020.







Wu, et al.              Expires October 19, 2020               [Page 29]

Internet-Draft         Transport Slice YANG model             April 2020


   [I-D.liu-teas-transport-network-slice-yang]
              Liu, X., Tantsura, J., Bryskin, I., Contreras, L., and Q.
              WU, "Transport Network Slice YANG Data Model", draft-liu-
              teas-transport-network-slice-yang-00 (work in progress),
              November 2019.

   [I-D.nsdt-teas-ns-framework]
              Gray, E. and J. Drake, "Framework for Transport Network
              Slices", draft-nsdt-teas-ns-framework-02 (work in
              progress), March 2020.

   [I-D.nsdt-teas-transport-slice-definition]
              Rokui, R., Homma, S., Makhijani, K., and L. Contreras,
              "IETF Definition of Transport Slice", draft-nsdt-teas-
              transport-slice-definition-01 (work in progress), March
              2020.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6242]  Wasserman, M., "Using the NETCONF Protocol over Secure
              Shell (SSH)", RFC 6242, DOI 10.17487/RFC6242, June 2011,
              <https://www.rfc-editor.org/info/rfc6242>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types",
              RFC 6991, DOI 10.17487/RFC6991, July 2013,
              <https://www.rfc-editor.org/info/rfc6991>.

   [RFC7317]  Bierman, A. and M. Bjorklund, "A YANG Data Model for
              System Management", RFC 7317, DOI 10.17487/RFC7317, August
              2014, <https://www.rfc-editor.org/info/rfc7317>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.





Wu, et al.              Expires October 19, 2020               [Page 30]

Internet-Draft         Transport Slice YANG model             April 2020


   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8299]  Wu, Q., Ed., Litkowski, S., Tomotaki, L., and K. Ogaki,
              "YANG Data Model for L3VPN Service Delivery", RFC 8299,
              DOI 10.17487/RFC8299, January 2018,
              <https://www.rfc-editor.org/info/rfc8299>.

   [RFC8340]  Bjorklund, M. and L. Berger, Ed., "YANG Tree Diagrams",
              BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,
              <https://www.rfc-editor.org/info/rfc8340>.

   [RFC8341]  Bierman, A. and M. Bjorklund, "Network Configuration
              Access Control Model", STD 91, RFC 8341,
              DOI 10.17487/RFC8341, March 2018,
              <https://www.rfc-editor.org/info/rfc8341>.

   [RFC8342]  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,
              and R. Wilton, "Network Management Datastore Architecture
              (NMDA)", RFC 8342, DOI 10.17487/RFC8342, March 2018,
              <https://www.rfc-editor.org/info/rfc8342>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [RFC8466]  Wen, B., Fioccola, G., Ed., Xie, C., and L. Jalil, "A YANG
              Data Model for Layer 2 Virtual Private Network (L2VPN)
              Service Delivery", RFC 8466, DOI 10.17487/RFC8466, October
              2018, <https://www.rfc-editor.org/info/rfc8466>.

   [RFC8640]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Dynamic Subscription to YANG Events
              and Datastores over NETCONF", RFC 8640,
              DOI 10.17487/RFC8640, September 2019,
              <https://www.rfc-editor.org/info/rfc8640>.

   [RFC8641]  Clemm, A. and E. Voit, "Subscription to YANG Notifications
              for Datastore Updates", RFC 8641, DOI 10.17487/RFC8641,
              September 2019, <https://www.rfc-editor.org/info/rfc8641>.

11.2.  Informative References

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/info/rfc3688>.




Wu, et al.              Expires October 19, 2020               [Page 31]

Internet-Draft         Transport Slice YANG model             April 2020


Appendix A.  Appendix A Comparison with Other Possible Transport Slice
             Models

   1.Transport Slice model based on IETF ACTN VN model

   The ACTN VN(Virtual Network) model introduced
   in[I-D.ietf-teas-actn-vn-yang]

   is the abstract customer view of the TE network.  Its YANG structure
   includes four components: .

   o  VN: The VN can be seen as a set of edge-to-edge abstract links (a
      Type 1 VN).

   o  AP"links" list and "termination points" list describe how nodes in
      a network are connected to each other

   o  VN-AP:vertical layering relationships between transport slice
      networks and underlay networks

   o  VN member: Each abstract link is referred to as a VN member and is
      formed as an E2E tunnel across the underlying networks

   The main concern with this model is TE specific, which does not
   comply with the technology agnostic characteristic specified in
   [I-D.nsdt-teas-transport-slice-definition].

   2.Transport Slice model based on IETF Network Topologies YANG data
   model extension

   IETF Network Topologies YANG data model extension introduced in
   Transport Network Slice YANG Data Model
   [I-D.liu-teas-transport-network-slice-yang]has the similar goal, but
   with different modelling design.  Its YANG structure includes three
   parts:

   o  Transport network: a transport network list and an list of nodes
      contained in the transport network

   o  Link: "links" list and "termination points" list describe how
      nodes in a network are connected to each other

   o  Support network: vertical layering relationships between transport
      slice networks and underlay networks

   Based on this structure, the transport slice-specific SLO attributes
   nodes are augmented on the Network Topologies model,, e.g.  isolation
   etc.  However, this modeling design requires the transport network to



Wu, et al.              Expires October 19, 2020               [Page 32]

Internet-Draft         Transport Slice YANG model             April 2020


   expose a lot of details of the network, such as the actual topology
   including nodes interconnection and different network layers
   interconnection.

Appendix B.  Appendix B Transporst Slice Traffic Criteria

   In some scenarios, some sites supports the customer service traffic
   of multiple slices.  The transport network connected to the sites
   needs to identify the traffic of' different slices to provide
   different SLO guarantees.  But the transport network does not have
   prior knowledge of these information.  Therefore, the transport slice
   model needs to carry these slice traffic classification information.
   'ts-traffic-criteria' container is used to specify the TS traffic-
   related parameters, including IP addresses, VLAN information, and
   etc.

       +-------------------------------------------------------+
       |            Higher Layer  System                       |
       +-------------------------------------------------------+
         |                       |                         |
         |             Transport Slice Model               |
    +----------+                 |                   +-----------+
    |          |                 |                   |           |
    |RAN Slice |         +----------------+          |Core Slice |
    |controlle |         | TS  controller |          | controller|
    +----+-----+         +-------+--------+          +-----+-----+
         |                       |                         |
         |                       |                         |
     +---+--+       +------------+----------------+       ++-----+
     |      |       |                             |       |      |
     |      |       |                             |       |      |
     |+----+|TS1-EP1|                             |       |      |
     ||    ||   |   |         TS1                 |       |+----+|
     ||gNB1|+---+---+-----+-----------------------+---+---+|UPF1||
     ||    |+***+******  /                        |   |   |+----+|
     |+----+|TS2-EP1|  */                         |TS1-EP3|      |
     |      |       |  /*                         |       |      |
     |+----+|TS1-EP2| /  *                        |       |      |
     ||    |+---+----     *    TS2                |       |+----+|
     ||gNB2|+***+*************************************+****|UPF2||
     ||    ||   |   |                             |   |   |+----+|
     |+----+|TS2-EP2|                             |TS2-EP3|      |
     |      |       |                             |       |      |
     |      |       |                             |       |      |
     +------+       +-----------------------------+       +------+

   As shown in the figure, gNodeB 1 and gNodeB 2 use IP gNB1 and IP gNB2
   to communicate with the transport network, respectively.  In



Wu, et al.              Expires October 19, 2020               [Page 33]

Internet-Draft         Transport Slice YANG model             April 2020


   addition, the traffic of TS1 and TS2 on gNodeB 1 and gNodeB 2 is
   transmitted through the same links to the transport network.
   Therefore, edge devices of the transport network cannot use IP
   addresses to distinguish a specific slice traffic.  Other information
   is therefore needed to identity it.

Authors' Addresses

   Bo Wu
   Huawei Technologies
   101 Software Avenue, Yuhua District
   Nanjing, Jiangsu  210012
   China

   Email: lana.wubo@huawei.com


   Dhruv Dhody
   Huawei Technologies
   Divyashree Techno Park
   Bangalore, Karnataka  560066
   India

   Email: dhruv.ietf@gmail.com


   Liuyan Han
   China Mobile

   Email: hanliuyan@chinamobile.com


   Reza Rokui
   Nokia Canada

   Email: reza.rokui@nokia.com















Wu, et al.              Expires October 19, 2020               [Page 34]
